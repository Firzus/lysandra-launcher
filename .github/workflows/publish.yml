name: Publish

on:
  push:
    tags: ['v*'] # d√©clench√© d√®s qu'un tag vX.Y.Z est pouss√©
  workflow_dispatch: # ex√©cutable manuellement depuis l‚ÄôUI

permissions:
  contents: write # cr√©ation / mise √† jour de la GitHub Release
  # packages: write    # ‚Üê supprime ou garde-le en write/read selon tes besoins

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        # quatre builds : mac M-chip, mac Intel, Windows, Linux
        include:
          - platform: macos-latest
            target: '--target aarch64-apple-darwin'
          - platform: macos-latest
            target: '--target x86_64-apple-darwin'
          - platform: windows-latest
            target: ''
          - platform: ubuntu-latest
            target: ''

    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        shell: bash
    env:
      TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

    steps:
      # 1. R√©cup√©rer le d√©p√¥t
      - name: üõéÔ∏è Checkout repo
        uses: actions/checkout@v4

      # 2. Rust (compilation backend Tauri)
      - name: ü¶Ä Set up Rust (stable)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      # 3. Cache Cargo (acc√©l√®re la compilation Rust)
      - name: üì¶ Cache Rust dependencies
        uses: swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref_type == 'tag' }}

      # 4. Node 18 + cache npm
      - name: üü¢ Set up Node 18 + npm cache
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm' # met automatiquement en cache ~/.npm

      # 5. Installer les d√©pendances front-end
      - name: üìö Install JS dependencies
        run: npm ci # rapide & fiable si tu as un package-lock.json

      # 6. D√©pendances syst√®me Linux (GTK/WebKit2GTK 4.1)
      - name: üêß Install Linux system deps
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev libwebkit2gtk-4.1-dev \
            libappindicator3-dev librsvg2-dev patchelf

      # 7. Build + signature + upload vers la Release
      - name: üèóÔ∏è Build & upload Tauri app
        uses: tauri-apps/tauri-action@v0.5.20
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # auto-fourni par GitHub
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          args: ${{ matrix.target }} # cible par plateforme
          tagName: ${{ github.ref_name }} # ex. v0.4.0
          releaseName: 'Lysandra Launcher ${{ github.ref_name }}'
          releaseBody: 'See the assets below to download and install this version.'
          releaseDraft: true # brouillon ‚Üí review avant publish
          prerelease: false
